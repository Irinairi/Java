Index: src/com/company/lab2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/lab2.java	(revision bfe1b591cc862143140ddddc118e8cb63053ad13)
+++ src/com/company/lab2.java	(date 1589920244789)
@@ -13,9 +13,25 @@
         division3();
         //tem if/else
         Calculator calcul = new Calculator();
-        System.out.println(" Rezultatul adunarii este :" + adunare(2, (short) 3));
-        System.out.println("Rezultatul impartirii:" + impartire(2, (short) 3));
-        System.out.println("Rezultatul scaderii este:" + scadere(2, (short) 3));
+        //System.out.println(" Rezultatul adunarii este :" + adunare(2, (short) 3));
+        calcul.adunare(2,3);
+        calcul.adunare(2,3,4);
+        calcul.adunare(2,3);
+        calcul.impartire(2,(short)3);
+        calcul.impartire(2,3);
+        calcul.impartire(2,1,3);
+        calcul.inmultirii(2,3);
+
+
+        //System.out.println("Rezultatul impartirii:" + impartire(2, (short) 3));
+        calcul.inmultirii(2,(short)3);
+        calcul.inmultirii(2,(short)3,(short)4);
+        calcul.scadere(2,(short)3);
+        calcul.scadere(2,3);
+        calcul.scadere(2,(short)2,(short)3);
+
+
+        //System.out.println("Rezultatul scaderii este:" + scadere(2, (short) 3));
 
         JavaPointObject();
         System.out.println("3");
@@ -63,6 +79,13 @@
         oper.printSumAverage( );
         //oper.printMediaDivi( );
         //oper.printAfisareNumere(  );
+        int []myArray =oper.getArrayHundred();
+        oper.printArray(myArray);
+        int []myArrayEven =oper.getArrayEven();
+       System.out.println(oper.getAverageFromArray(myArray));
+       System.out.print(oper.StrigArray(new String []{"lapte","carne","oua"},"lapte"));
+       System.out.println("number position is:"+oper.ReturnNumber(new int[]{1,2,3,4,5,6},4));
+
 
 
     }
Index: src/com/company/LogicalOp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/LogicalOp.java	(revision bfe1b591cc862143140ddddc118e8cb63053ad13)
+++ src/com/company/LogicalOp.java	(date 1589920234952)
@@ -1,5 +1,7 @@
 package com.company;
 
+import java.util.Objects;
+
 public class LogicalOp {
 
 
@@ -262,26 +264,119 @@
 
     // Creati o metoda care sa primeasca doi parametrii de tip numar, si sa returneze media numerelor divizibile cu 7, din acel interval. //
     // Apelati metoda in clasa Main, metoda main() pentru a verifica daca functioneaza.
-   // public static void printMediaDivi() {
-      //  int i = 1, cout = 0, sum = 0;
+    // public static void printMediaDivi() {
+    //  int i = 1, cout = 0, sum = 0;
 
     // while ( i <= 100; i++)
-           // if (i % 7 == 0)
+    // if (i % 7 == 0)
 
     //}
-}
+
 
-        //Creati o metoda care sa afiseze primele 20 de numere din sirul lui Fibonacci.
-        //public static void printAfisareNumere ( int i){
-           // int i = 1, i1 = 1, i2;
-           // while (i < 18) i++;
-           // {
-              //  i2 = i1 + i;
-               // i = i1;
-               // i1 = i2;
+    //Creati o metoda care sa afiseze primele 20 de numere din sirul lui Fibonacci.
+    //public static void printAfisareNumere ( int i){
+    // int i = 1, i1 = 1, i2;
+    // while (i < 18) i++;
+    // {
+    //  i2 = i1 + i;
+    // i = i1;
+    // i1 = i2;
 
-               // System.out.println(i + " " + i1 + " ");
-            //}
+    // System.out.println(i + " " + i1 + " ");
+    //}
 
 
-//}
\ No newline at end of file
+//}
+//2.  In clasa LogicalOp, creati o metoda care sa scrie pe un array de 100 de pozitii,//
+// valorile de la 1 la 100. Sa se afiseze progresul in consola pe tot parcursul.//
+// Apelati metoda in main() pentru a verifica daca functioneaza.
+
+
+    public int[] getArrayHundred() {
+        int array[] = new int[100];
+        for (int i = 0; i < 100; i++) {
+            array[i] = i + 1;
+        }
+        return array;
+    }
+
+    public void printArray(int[] array) {
+        for (int i = 0; i < array.length; i++) {
+            System.out.println(array[i]);
+        }
+    }
+
+//3. Creati o metoda care primeasca un parametru de tip array de numere intregi gol,//
+// si sa il returneze populat cu toate valorile pare de la 1 la 100. //
+// Apelati metoda in main() pentru a verifica daca functioneaza. Atentie, //
+// metoda returneaza un array, deci acesta va trebui surprins si afisat folosind o bucla.
+
+    public int[] getArrayEven() {
+        int array[] = new int[100];
+        for (int i = 0; i < 100; i++) {
+            if (i % 2 == 0)
+                System.out.println(i + "");
+            i++;
+        }
+        return array;
+    }
+
+//4. Creati o metoda care sa primeasca un parametru de tip array de numere, //
+// si sa fie populat cu valori. Metoda sa calculeze si sa returneze //
+// media numerelor din array.//
+// Apelati metoda in main() pentru a verifica daca functioneaza.
+
+    public float getAverageFromArray(int[] array) {
+        float sum = 0;
+        for (int i = 0; i < array.length; i++) {
+            sum += array[i];
+        }
+        return sum / array.length;
+    }
+
+    //5. Creati o metoda care sa primeasca un parametru de tip array de string-uri, //
+    // populat cu valori, si un parametru de tip String. //
+    // Metoda sa verifice daca valoarea string-ului primit se regaseste in array-ul primit,//
+    // iar daca da sa returneze true iar daca nu, sa returneze false. //
+    // Apelati metoda in main() pentru a verifica daca functioneaza.
+
+    public boolean StrigArray(String[] array, String ceva) {
+        for (String i : array) {
+            if (ceva.equals(i)) {
+                return true;
+            }
+
+        }
+        return false;
+    }
+
+
+    //Creati o metoda care sa primeasca un parametru de tip array de numere, populat cu valori, si un parametru de tip numar.//
+    // Metoda sa verifice daca numarul primit se afla in array-ul primit, si daca da, atunci sa returneze pozitia pe care se afla numarul.  //
+    // Apelati metoda in main() pentru a verifica daca functioneaza.
+    public int ReturnNumber(int[] array, int number) {
+        //int aa = 3;
+        for (int i = 0; i < array.length; i++) {
+            if (Objects.equals(number, i)) {
+                return (i);
+            }
+
+        }
+
+        return number;
+    }
+
+
+
+
+}
+
+
+
+
+
+
+
+
+
+
Index: src/com/company/Calculator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/company/Calculator.java	(revision bfe1b591cc862143140ddddc118e8cb63053ad13)
+++ src/com/company/Calculator.java	(date 1589897280630)
@@ -8,19 +8,63 @@
         return rezultat;
     }
 
+    public float adunare(int primulNumar, int alDoileaNumar,int alTreilea) {
+      float rezultat = primulNumar + alDoileaNumar+alTreilea;
+      return rezultat;
+    }
+    public float adunare (int primulNumar, int alDoileaNumar) {
+        float rezultat = primulNumar + alDoileaNumar;
+        return rezultat;
+    }
+
     public int impartire(int primulNumar, short alDoileaNumar) {
         int rezultat1 = primulNumar / alDoileaNumar;
         return rezultat1;
     }
 
+    public long impartire(int primulNumar, int alDoileaNumar) {
+        int rezultat = primulNumar / alDoileaNumar;
+        return rezultat;
+    }
+
+    public float impartire(int primulNumar,int alDoileaNumar,int alTreilea) {
+        int rezultat1 = primulNumar / alDoileaNumar/alTreilea;
+        return rezultat1;
+    }
     public int inmultirii(int primulNumar, short alDoileaNumar) {
         int rezultat2 = primulNumar * alDoileaNumar;
         return rezultat2;
     }
 
+    public int inmultirii(int primulNumar, short alDoileaNumar,short alTreilea) {
+        int rezultat2 = primulNumar * alDoileaNumar*alTreilea;
+        return rezultat2;
+
+    }
+    public float inmultirii(int primulNumar, int alDoileaNumar) {
+        int rezultat2 = primulNumar * alDoileaNumar;
+        return rezultat2;
+    }
     public int scadere(int primulNumar, short alDoileaNumar) {
         int rezultat3 = primulNumar - alDoileaNumar;
         return rezultat3;
     }
 
+    public int scadere(int primulNumar, int alDoileaNumar) {
+        int rezultat3 = primulNumar - alDoileaNumar;
+        return rezultat3;
+    }
+    public float scadere(int primulNumar, short alDoileaNumar,short alTreilea) {
+        int rezultat3 = primulNumar - alDoileaNumar-alTreilea;
+        return rezultat3;
+    }
+
+
+
+    //1. In proiectul de Calculator, in clasa Calculator, supraincarcati toate metodele //
+    // conform principiului polimorfismului.//
+    // Creati cel putin cate doua metode polimorfe pentru fiecare metoda pe care o aveti in clasa.
+    //
+    //Spre exemplu, pentru metoda de adunare, faceti ca aceasta sa lucreze o data cu 2 int-uri, o data cu 2 float-uri//
+    // , cu 3 float-uri, cu 4 int-uri, etc. Atentie ce returnati la final!
 }
\ No newline at end of file
